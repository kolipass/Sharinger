apply plugin: 'android'

def computeVersionName() {
    def Properties props = new Properties()
    def propFile = new File(project.getRootDir(), "local.properties")
    props.load(new FileInputStream(propFile))

    def build = 0
    if (props.contains("VERSION_BUILD")) {
        build = Integer.parseInt(props[VERSION_BUILD]) + 1
    }
    props.setProperty("VERSION_BUILD", String.valueOf(build))
    OutputStream out = new FileOutputStream(propFile);
    props.store(out, "");
    out.close();

    def versionName = project.VERSION_MAJOR + "." + project.VERSION_MINOR + "." + project.VERSION_PATCH + "." + build
    versionName = String.valueOf(project.VERSION_SNAPSHOT).length() > 0 ? versionName + "-" + project.VERSION_SNAPSHOT : versionName;

    return versionName
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionName computeVersionName()
        versionCode Integer.parseInt(project.VERSION_CODE)
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            applicationVariants.all { variant ->
                def file = variant.outputFile
                variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}
